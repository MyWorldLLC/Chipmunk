name: publish_cli

on:
  push:
    tags:
      - v*
      - ci*

jobs:
  draft_release:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.draft_release.outputs.id }}
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Create Draft Release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: CLI - ${{ steps.tag.outputs.tag }}
          draft: true
          prerelease: false

  build:
    needs: draft_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-2019, macos-10.15 ]
        include:
          - os: ubuntu-latest
            env:
              PLATFORM: linux
              INSTALLER_NAME: Debian
              INSTALLER_EXT: deb
              INSTALLER_MEDIA_TYPE: application/vnd.debian.binary-package

          - os: windows-2019
            env:
              PLATFORM: win
              INSTALLER_NAME: Windows
              INSTALLER_EXT: exe
              INSTALLER_MEDIA_TYPE: application/vnd.microsoft.portable-executable

          - os: macos-10.15
            env:
              PLATFORM: mac
              INSTALLER_NAME: Mac
              INSTALLER_EXT: dmg
              INSTALLER_MEDIA_TYPE: application/x-apple-diskimage

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.14
        uses: actions/setup-java@v1
        with:
          java-version: 1.14
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Build with Gradle
        run: ./gradlew :CLI:jpackage -Prelease="${{ steps.tag.outputs.tag }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.env.INSTALLER_NAME }} Installer - ${{ steps.tag.outputs.tag }}
          path: CLI/build/*.${{ matrix.env.INSTALLER_EXT }}

#      - name: Publish release artifact
#        uses: alexellis/upload-assets@0.2.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          asset_paths: '["./CLI/build/chipmunk*"]'

      - name: Publish release asset
        id: publish_release_assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.draft_release.outputs.id }}
          assets_path: CLI/build/installer


