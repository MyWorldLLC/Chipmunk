import chipmunk.system
from chipmunk.coolstuff import *
from chipmunk.io import NutCracker as TheNutCracker
from chipmunk.io import NutPacker, NutFormat as TheNutPacker, TheNutFormat

class Chippy {

	age = 2
	tail
	
	# List of nuts he has
	nuts = []
	
	# Map of information on what trees he likes
	trees = {}

	# Common genus shared by all chipmunks, variable is set in the type's namespace
	shared genus = "Tamias"
	
	# Constructor
	Chippy(){
	
		# local variable
		x = 1234
		
		# instance variable - type convert string literal to integer
		self.x = "1234" as Int
		
		# shared variable - set in type namespace
		shared x = "asdf"
		
		# equivalent to (if "type" attribute has not been altered)
		self.type.x = "asdf"

	}
	
	hideNuts(){
		tree = choose(trees)
		self.climb(tree)
		for( nut in nuts ){
			tree.putInTrunk(nut)
		}
	}
	
	# Method shared by all chipmunks - can only access non-local variables
	# in the class type and module namespaces
	shared getGenus(){
		return genus
	}
}

throwNut(){
	nut = new Nut()
	nut.dropOnGround()
}

main(){
	chippy = new Chippy()
	chippy.doChipmunkThings()
}